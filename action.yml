name: "Unit Test Failure Validation"
description: "Validates that unit tests fail without code changes and pass with them, ensuring tests are properly written"
author: "Alex Kirk"

inputs:
  test-command:
    description: 'Command to run tests (e.g., "npm test", "python -m unittest discover -s tests", "composer test")'
    required: true
  base-ref:
    description: "Base branch reference"
    required: false
    default: ${{ github.event.pull_request.base.ref }}
  test-directory:
    description: "Directory containing tests (to detect changes)"
    required: false
    default: "tests/"

outputs:
  tests-changed:
    description: "Whether tests were changed (1 or 0)"
    value: ${{ steps.check-changes.outputs.tests-changed }}
  validation-passed:
    description: "Whether validation passed (tests failed without changes, passed with changes)"
    value: ${{ steps.validate.outputs.passed }}

runs:
  using: "composite"
  steps:
    - name: Fetch base branch
      shell: bash
      run: git fetch origin ${{ inputs.base-ref }}

    - name: Check if tests were changed
      id: check-changes
      shell: bash
      run: |
        BASE_SHA=$(git merge-base origin/${{ inputs.base-ref }} HEAD)
        echo "Base SHA: $BASE_SHA"
        echo "HEAD SHA: $(git rev-parse HEAD)"

        set +e
        git diff --quiet $BASE_SHA HEAD -- ${{ inputs.test-directory }}
        DIFF_EXIT=$?
        set -e

        if [ $DIFF_EXIT -eq 0 ]; then
          echo "tests-changed=0" >> "${GITHUB_OUTPUT}"
          echo "TESTS_CHANGED=0" >> "${GITHUB_ENV}"
          echo "No test changes detected"
        else
          echo "tests-changed=1" >> "${GITHUB_OUTPUT}"
          echo "TESTS_CHANGED=1" >> "${GITHUB_ENV}"
          echo "Test changes detected"
        fi

    - name: Revert code changes (excluding tests)
      shell: bash
      run: |
        BASE_SHA=$(git merge-base origin/${{ inputs.base-ref }} HEAD)
        git diff --name-only $BASE_SHA HEAD | grep -v '^${{ inputs.test-directory }}' | xargs -r git restore --source=$BASE_SHA --worktree --
      if: env.TESTS_CHANGED == '1'

    - name: Run unit tests without changes
      id: validate
      shell: bash
      run: |
        if [[ ${{ env.TESTS_CHANGED }} -eq 0 ]]; then
          echo "No unit test changes detected, skipping validation"
          echo "passed=skipped" >> "${GITHUB_OUTPUT}"
          exit 0
        fi

        if ${{ inputs.test-command }}; then
          echo "❌ Unit test should not pass without code changes"
          echo "passed=0" >> "${GITHUB_OUTPUT}"
          exit 1
        else
          echo "✅ Unit test failed as expected without code changes"
          echo "passed=1" >> "${GITHUB_OUTPUT}"
        fi

branding:
  icon: "check-circle"
  color: "green"
